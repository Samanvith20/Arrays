#include <iostream>
#include <vector>
#include <unordered_map> // Include the unordered_map header

using namespace std;

int subarraysWithSumK(vector<int> a, int k) {
    int n = a.size();           // Number of elements in array
    int cnt = 0;                // Counter for subarrays with desired XOR
    int xorr = 0;               // Cumulative XOR value
    unordered_map<int, int> xorCount; // Map to track XOR values and counts

    for (int i = 0; i < n; i++) {
        xorr ^= a[i];                // Update cumulative XOR
        if (xorr == k) cnt++;        // If XOR matches k, increment count
        if (xorCount.find(xorr ^ k) != xorCount.end()) cnt += xorCount[xorr ^ k]; // Increment count by existing XOR count
        xorCount[xorr]++;            // Update XOR count map
    }
    return cnt;                     // Return final count
}
